/*################################################<
>>> *Authors: Jhunelle Jueridini                <<<
>>>           Nathaniel Nation        0701989   <<<
>>>           Claudia-Ann Gray                  <<<
>>>           Dave Taylor                       <<<
>>>			  Dwight
>>>           Pedroy
>>>                                             <<<
>>> Lecture/Tutor: Mr. Christopher Slowley      <<<
***************************************************/

			    	//** Password Implementation File**//

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <conio.h>
#include <windows.h>
#include "password.h"


/* begin excute function get password*/
int password(FILE *repwPtr)
{
	struct pass word = {0, ""};               /* declare structure defaults*/
   char holdpw1[9] = {NULL}, holdpw2[9] = {NULL};       /* declare & initailize other variables*/

   repwPtr = fileopen("password.txt", "rb+");  /* send file to be open in a different mode*/

   word.pwnum = 1;  /* initailize to 1*/

   /* Search for data and read*/
   fseek(repwPtr, (word.pwnum - 1)*sizeof(struct pass), SEEK_SET);
   fread(&word, sizeof(struct pass), 1 , repwPtr);

   /* test if there is no password*/
   if ( strcmp(word.pw, holdpw2) == 0){

   	/* if true, get password for user*/
   	printf("\n\n\n\n\n\n\n\n\t\t\t");
   	strcpy(holdpw1, getpass("Create Password: "));

      printf("\t\t\t");
      strcpy(holdpw2, getpass("Re-Enter Password: "));

      /* test if the passwords match*/
      while ( (strcmp(holdpw1, holdpw2)) >= 0 || (strcmp(holdpw1, holdpw2)) <= 0){
         clrscr();
         if ( strcmp(holdpw1, holdpw2) == 0){
         	break;
         }
      	/* if they dont match, then ask the user to re-enter*/
         puts("\n\n\n\n\n\n\n\n\t\t\t\aPassword does not match!");

         printf("\t\t\t");
      	strcpy(holdpw1, getpass("Create Password: "));

         printf("\t\t\t");
		   strcpy(holdpw2, getpass("Re-Enter Password: "));
      }/* end while*/

      strcpy(word.pw, holdpw1); /* copy hold password to file*/

      /* set pointer to location in file then write data to it*/
      fseek(repwPtr, (word.pwnum - 1)*sizeof(struct pass),SEEK_SET);
      fwrite(&word, sizeof(struct pass), 1 , repwPtr);

      fclose(repwPtr);  /* close file*/
      return 1; /* return 1 because the user is accepted*/
   }/* end if*/

   else {    /* else ask user to enter password*/

      printf("\n\n\n\n\n\n\n\n\t\t\t");
   	strcpy(holdpw1, getpass("Enter Password: "));   /* prompt user for password*/

      if (strcmp(word.pw, holdpw1) == 0){      /* test if password is correct*/
      	return 1; /* if true return 1 because the user is accepted*/
      }/* end if*/

      else{
      	printf("\a\t\t\tInvalid Password!\r\n");   /* else display error*/
         return 0;  /* and return 0 because the user is not accepted*/
      }/* end for*/

   }/*end else*/

}/* end function password*/
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
/* begin excute function get password*/
void changepassword(FILE *repwPtr)
{
	struct pass word = {0, ""};               /* declare structure defaults*/
   char holdpw1[9] = {NULL}, holdpw2[9] = {NULL};       /* declare & initailize other variables*/
   clrscr();

   repwPtr = fileopen("password.txt", "rb+");  /* send file to be open in a different mode*/

   word.pwnum = 1;  /* initailize to 1*/

   /* Search for data and read*/
   fseek(repwPtr, (word.pwnum - 1)*sizeof(struct pass), SEEK_SET);
   fread(&word, sizeof(struct pass), 1 , repwPtr);

 	printf("\n\n\n\n\n\n\n\n\t\t\t");
   strcpy(holdpw2, getpass("Enter Old Password: "));

   /* test if there is no password*/
   if ( strcmp(word.pw, holdpw2) == 0){

   	/* if true, get password for user*/
   	printf("\t\t\t");
   	strcpy(holdpw1, getpass("Create New Password: "));

      printf("\t\t\t");
      strcpy(holdpw2, getpass("Re-Enter Password: "));

      /* test if the passwords match*/
      while ( (strcmp(holdpw1, holdpw2)) >= 0 || (strcmp(holdpw1, holdpw2)) <= 0){
      	clrscr();
         if ( strcmp(holdpw1, holdpw2) == 0){
         	break;
         }
      	/* if they dont match, then ask the user to re-enter*/
         puts("\n\n\n\n\n\n\n\n\t\t\t\aPassword does not match!");

         printf("\t\t\t");
         strcpy(holdpw1, getpass("Enter Password: "));
         
         printf("\t\t\t");
		   strcpy(holdpw2, getpass("Re-Enter Password: "));
      }/* end while*/

      strcpy(word.pw, holdpw1); /* copy hold password to file*/

      /* set pointer to location in file then write data to it*/
      fseek(repwPtr, (word.pwnum - 1)*sizeof(struct pass),SEEK_SET);
      fwrite(&word, sizeof(struct pass), 1 , repwPtr);

      fclose(repwPtr);  /* close file*/
   }/* end if*/

   else {    /* else ask user to enter password*/
   	printf("\a\t\t\tInvalid Password!\r\n");   /* else display error*/
      Sleep(1500);
   }/*end else*/

}/* end function password*/


